<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
<!-- 	<beans:bean id="testExcutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<beans:property name="corePoolSize" value="1"/>
		<beans:property name="maxPoolSize" value="3"/>
		<beans:property name="queueCapacity" value="1"/>
		<beans:property name="allowCoreThreadTimeOut" value="true"/>
		<beans:property name="keepAliveSeconds" value="10"/>
	</beans:bean>	 -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.jc.pj" />
	
	<task:annotation-driven executor="testExcutor" scheduler="testScheduler"/>
	<task:scheduler id="testScheduler" pool-size="2"/>	
	<task:executor id="testExcutor" keep-alive="5" pool-size="2" queue-capacity="1" rejection-policy="ABORT"/>	
	<!-- <task:executor id="testExcutor" keep-alive="5" pool-size="2" queue-capacity="1" rejection-policy="DISCARD_OLDEST" /> -->	
	<!-- <task:executor id="testExcutor" keep-alive="5" pool-size="2" queue-capacity="1" rejection-policy="CALLER_RUNS" />	 -->
	

	
</beans:beans>
